<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PlantUML demo â€“ UML Modeling</title><link>http://adrianovieira.github.io/plantuml-demo/docs/modeling/uml/</link><description>Recent content in UML Modeling on PlantUML demo</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 26 Nov 2021 12:33:16 -0300</lastBuildDate><atom:link href="http://adrianovieira.github.io/plantuml-demo/docs/modeling/uml/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Samples Diagrams.md</title><link>http://adrianovieira.github.io/plantuml-demo/docs/modeling/uml/plantuml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://adrianovieira.github.io/plantuml-demo/docs/modeling/uml/plantuml/</guid><description>
&lt;h1 id="plantuml-demo">PlantUML demo&lt;/h1>
&lt;blockquote>
&lt;p>&lt;em>&amp;ldquo;PlantUML in a nutshell. PlantUML is a component that allows to quickly write: Sequence diagram. Usecase diagram. Class diagram. Object diagram. Activity diagram (here is the legacy syntax) Component diagram. Deployment diagram&amp;rdquo;&lt;/em> - &lt;a href="http://PlantUML.com">PlantUML.com&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;h3 id="sequence-diagram">Sequence Diagram&lt;/h3>
&lt;pre tabindex="0">&lt;code class="language-plantuml" data-lang="plantuml">
Alice -&amp;gt; Bob: Authentication Request
Bob --&amp;gt; Alice: Authentication Response
Alice -&amp;gt; Bob: Another authentication Request
Alice &amp;lt;-- Bob: Another authentication Response
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>Declaring participant&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code class="language-plantuml" data-lang="plantuml">actor Bob #red
' The only difference between actor
'and participant is the drawing
participant Alice
participant &amp;quot;I have a really\nlong name&amp;quot; as L #99FF99
/' You can also declare:
participant L as &amp;quot;I have a really\nlong name&amp;quot; #99FF99
'/
Alice-&amp;gt;Bob: Authentication Request
Bob-&amp;gt;Alice: Authentication Response
Bob-&amp;gt;L: Log transaction
&lt;/code>&lt;/pre>&lt;h3 id="mindmap-diagram">MindMap Diagram&lt;/h3>
&lt;ul>
&lt;li>Mindmap OrgMode syntax&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code class="language-plantuml" data-lang="plantuml">@startmindmap
* Debian
** Ubuntu
*** Linux Mint
*** Kubuntu
*** Lubuntu
*** KDE Neon
** LMDE
** SolydXK
** SteamOS
** Raspbian with a very long name
*** &amp;lt;s&amp;gt;Raspmbc&amp;lt;/s&amp;gt; =&amp;gt; OSMC
*** &amp;lt;s&amp;gt;Raspyfi&amp;lt;/s&amp;gt; =&amp;gt; Volumio
@endmindmap
&lt;/code>&lt;/pre></description></item><item><title>Docs: UML samples.adoc</title><link>http://adrianovieira.github.io/plantuml-demo/docs/modeling/uml/plantuml-samples/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://adrianovieira.github.io/plantuml-demo/docs/modeling/uml/plantuml-samples/</guid><description>
&lt;div class="sect1">
&lt;h2 id="_plantuml_sample_diagram">PlantUML sample Diagram&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="sect2">
&lt;h3 id="_plantuml_samples">PlantUML samples&lt;/h3>
&lt;div class="quoteblock">
&lt;blockquote>
&lt;div class="paragraph">
&lt;p>&lt;em>&amp;#34;PlantUML in a nutshell. PlantUML is a component that allows to quickly write: Sequence diagram. Usecase diagram. Class diagram. Object diagram. Activity diagram (here is the legacy syntax) Component diagram. Deployment diagram&amp;#34;&lt;/em> - &lt;a href="http://PlantUML.com">PlantUML.com&lt;/a>.&lt;/p>
&lt;/div>
&lt;/blockquote>
&lt;/div>
&lt;div class="listingblock">
&lt;div class="title">Sequence Diagram&lt;/div>
&lt;div class="content">
&lt;pre class="highlight">&lt;code class="language-plantuml" data-lang="plantuml">@startuml
Alice -&amp;gt; Bob: Authentication Request
Bob --&amp;gt; Alice: Authentication Response
Alice -&amp;gt; Bob: Another authentication Request
Alice &amp;lt;-- Bob: Another authentication Response
@enduml&lt;/code>&lt;/pre>
&lt;/div>
&lt;/div>
&lt;div class="listingblock">
&lt;div class="title">Sequence Diagram with actor and participant&lt;/div>
&lt;div class="content">
&lt;pre class="highlight">&lt;code class="language-plantuml" data-lang="plantuml">@startuml
actor Bob #red
&amp;#39; The only difference between actor
&amp;#39;and participant is the drawing
participant Alice
participant &amp;#34;I have a really\nlong name&amp;#34; as L #99FF99
/&amp;#39; You can also declare:
participant L as &amp;#34;I have a really\nlong name&amp;#34; #99FF99
&amp;#39;/
Alice-&amp;gt;Bob: Authentication Request
Bob-&amp;gt;Alice: Authentication Response
Bob-&amp;gt;L: Log transaction
@enduml&lt;/code>&lt;/pre>
&lt;/div>
&lt;/div>
&lt;div class="listingblock">
&lt;div class="title">Class Diagram&lt;/div>
&lt;div class="content">
&lt;pre class="highlight">&lt;code class="language-plantuml" data-lang="plantuml">@startuml
class BlockProcessor
class DiagramBlock
class DitaaBlock
class PlantUmlBlock
BlockProcessor &amp;lt;|-- DiagramBlock
DiagramBlock &amp;lt;|-- DitaaBlock
DiagramBlock &amp;lt;|-- PlantUmlBlock
@enduml&lt;/code>&lt;/pre>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item></channel></rss>